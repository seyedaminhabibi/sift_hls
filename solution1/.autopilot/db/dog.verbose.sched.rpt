

================================================================
== Vivado HLS Report for 'dog'
================================================================
* Date:           Wed Dec  4 23:12:30 2019

* Version:        2016.2 (Build 1577090 on Thu Jun 02 16:59:10 MDT 2016)
* Project:        sift_starter
* Solution:       solution1
* Product family: qzynq
* Target device:  xq7z020cl400-1q


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   8.00|      5.10|        1.00|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  601|  601|  602|  602|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+-----+-----+----------+-----------+-----------+------+----------+
        |             |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1     |    5|    5|         2|          -|          -|     3|    no    |
        |- Loop 2     |  594|  594|        66|          -|          -|     9|    no    |
        | + Loop 2.1  |   64|   64|         8|          -|          -|     8|    no    |
        +-------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 12
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	2  / (!tmp_1)
	4  / (tmp_1)
4 --> 
	5  / (!exitcond1)
5 --> 
	4  / (exitcond)
	6  / (!exitcond)
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	5  / true
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: line_delays_rp_V [1/1] 0.00ns
:0  %line_delays_rp_V = alloca i10

ST_1: line_delays_rp_V_1 [1/1] 0.00ns
:1  %line_delays_rp_V_1 = alloca i10

ST_1: line_delays_rp_V_2 [1/1] 0.00ns
:2  %line_delays_rp_V_2 = alloca i10

ST_1: line_delays_wp_V [1/1] 0.00ns
:3  %line_delays_wp_V = alloca i10

ST_1: line_delays_wp_V_1 [1/1] 0.00ns
:4  %line_delays_wp_V_1 = alloca i10

ST_1: line_delays_wp_V_2 [1/1] 0.00ns
:5  %line_delays_wp_V_2 = alloca i10

ST_1: stg_19 [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecBitsMap(i24* %out_data_V), !map !85

ST_1: stg_20 [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecBitsMap(i8 %in_V), !map !101

ST_1: stg_21 [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecTopModule([4 x i8]* @dog_str) nounwind

ST_1: in_V_read [1/1] 0.00ns
:9  %in_V_read = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %in_V)

ST_1: line_delays_buffer_V [1/1] 0.00ns
:10  %line_delays_buffer_V = alloca [3072 x i8], align 1

ST_1: line_delay_outs_V [1/1] 0.00ns
:11  %line_delay_outs_V = alloca [3 x i8], align 1

ST_1: stg_25 [1/1] 0.00ns
:12  call void (...)* @_ssdm_op_SpecMemCore([3072 x i8]* %line_delays_buffer_V, [1 x i8]* @p_str2072, [12 x i8]* @p_str2074, [1 x i8]* @p_str2072, i32 -1, [1 x i8]* @p_str2072, [1 x i8]* @p_str2072, [1 x i8]* @p_str2072, [1 x i8]* @p_str2072, [1 x i8]* @p_str2072)

ST_1: stg_26 [1/1] 1.57ns
:13  br label %arrayctor.loop.i.i


 <State 2>: 1.58ns
ST_2: tmp [1/1] 0.00ns
arrayctor.loop.i.i:0  %tmp = phi i2 [ 0, %0 ], [ %tmp_9, %arrayctor.loop.i.i5_ifconv ]

ST_2: tmp_9 [1/1] 0.85ns
arrayctor.loop.i.i:1  %tmp_9 = add i2 %tmp, 1

ST_2: stg_29 [1/1] 1.58ns
arrayctor.loop.i.i:2  switch i2 %tmp, label %branch2 [
    i2 0, label %arrayctor.loop.i.i5_ifconv.pre
    i2 1, label %branch1
  ]

ST_2: stg_30 [1/1] 0.00ns
branch1:0  store i10 0, i10* %line_delays_wp_V_1

ST_2: stg_31 [1/1] 0.00ns
branch1:1  br label %arrayctor.loop.i.i5_ifconv

ST_2: stg_32 [1/1] 0.00ns
arrayctor.loop.i.i5_ifconv.pre:0  store i10 0, i10* %line_delays_wp_V

ST_2: stg_33 [1/1] 0.00ns
arrayctor.loop.i.i5_ifconv.pre:1  br label %arrayctor.loop.i.i5_ifconv

ST_2: stg_34 [1/1] 0.00ns
branch2:0  store i10 0, i10* %line_delays_wp_V_2

ST_2: stg_35 [1/1] 0.00ns
branch2:1  br label %arrayctor.loop.i.i5_ifconv


 <State 3>: 4.16ns
ST_3: line_delays_rp_V_load [1/1] 0.00ns
arrayctor.loop.i.i5_ifconv:0  %line_delays_rp_V_load = load i10* %line_delays_rp_V

ST_3: line_delays_rp_V_1_load [1/1] 0.00ns
arrayctor.loop.i.i5_ifconv:1  %line_delays_rp_V_1_load = load i10* %line_delays_rp_V_1

ST_3: line_delays_rp_V_2_load [1/1] 0.00ns
arrayctor.loop.i.i5_ifconv:2  %line_delays_rp_V_2_load = load i10* %line_delays_rp_V_2

ST_3: line_delays_wp_V_load [1/1] 0.00ns
arrayctor.loop.i.i5_ifconv:3  %line_delays_wp_V_load = load i10* %line_delays_wp_V

ST_3: line_delays_wp_V_1_load [1/1] 0.00ns
arrayctor.loop.i.i5_ifconv:4  %line_delays_wp_V_1_load = load i10* %line_delays_wp_V_1

ST_3: line_delays_wp_V_2_load [1/1] 0.00ns
arrayctor.loop.i.i5_ifconv:5  %line_delays_wp_V_2_load = load i10* %line_delays_wp_V_2

ST_3: sel_tmp [1/1] 1.22ns
arrayctor.loop.i.i5_ifconv:6  %sel_tmp = icmp eq i2 %tmp, 1

ST_3: sel_tmp1 [1/1] 0.00ns (grouped into LUT with out node line_delays_rp_V_2_1)
arrayctor.loop.i.i5_ifconv:7  %sel_tmp1 = select i1 %sel_tmp, i10 %line_delays_rp_V_2_load, i10 -8

ST_3: sel_tmp2 [1/1] 1.22ns
arrayctor.loop.i.i5_ifconv:8  %sel_tmp2 = icmp eq i2 %tmp, 0

ST_3: line_delays_rp_V_2_1 [1/1] 1.37ns (out node of the LUT)
arrayctor.loop.i.i5_ifconv:9  %line_delays_rp_V_2_1 = select i1 %sel_tmp2, i10 %line_delays_rp_V_2_load, i10 %sel_tmp1

ST_3: sel_tmp5 [1/1] 0.00ns (grouped into LUT with out node line_delays_rp_V_1_1)
arrayctor.loop.i.i5_ifconv:10  %sel_tmp5 = select i1 %sel_tmp, i10 -8, i10 %line_delays_rp_V_1_load

ST_3: line_delays_rp_V_1_1 [1/1] 1.37ns (out node of the LUT)
arrayctor.loop.i.i5_ifconv:11  %line_delays_rp_V_1_1 = select i1 %sel_tmp2, i10 %line_delays_rp_V_1_load, i10 %sel_tmp5

ST_3: line_delays_rp_V_0_1 [1/1] 1.37ns
arrayctor.loop.i.i5_ifconv:12  %line_delays_rp_V_0_1 = select i1 %sel_tmp2, i10 -8, i10 %line_delays_rp_V_load

ST_3: tmp_1 [1/1] 1.22ns
arrayctor.loop.i.i5_ifconv:13  %tmp_1 = icmp eq i2 %tmp, -2

ST_3: empty [1/1] 0.00ns
arrayctor.loop.i.i5_ifconv:14  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3)

ST_3: stg_51 [1/1] 0.00ns
arrayctor.loop.i.i5_ifconv:15  store i10 %line_delays_rp_V_2_1, i10* %line_delays_rp_V_2

ST_3: stg_52 [1/1] 0.00ns
arrayctor.loop.i.i5_ifconv:16  store i10 %line_delays_rp_V_1_1, i10* %line_delays_rp_V_1

ST_3: stg_53 [1/1] 0.00ns
arrayctor.loop.i.i5_ifconv:17  store i10 %line_delays_rp_V_0_1, i10* %line_delays_rp_V

ST_3: stg_54 [1/1] 0.00ns
arrayctor.loop.i.i5_ifconv:18  br i1 %tmp_1, label %line_buffer.exit.preheader, label %arrayctor.loop.i.i

ST_3: line_delays_0_wp_V_1 [1/1] 0.00ns
line_buffer.exit.preheader:0  %line_delays_0_wp_V_1 = alloca i10

ST_3: line_delays_1_wp_V_1 [1/1] 0.00ns
line_buffer.exit.preheader:1  %line_delays_1_wp_V_1 = alloca i10

ST_3: line_delays_2_wp_V_1 [1/1] 0.00ns
line_buffer.exit.preheader:2  %line_delays_2_wp_V_1 = alloca i10

ST_3: line_delays_0_rp_V_1 [1/1] 0.00ns
line_buffer.exit.preheader:3  %line_delays_0_rp_V_1 = alloca i10

ST_3: line_delays_1_rp_V_1 [1/1] 0.00ns
line_buffer.exit.preheader:4  %line_delays_1_rp_V_1 = alloca i10

ST_3: line_delays_2_rp_V_1 [1/1] 0.00ns
line_buffer.exit.preheader:5  %line_delays_2_rp_V_1 = alloca i10

ST_3: stg_61 [1/1] 1.57ns
line_buffer.exit.preheader:6  store i10 %line_delays_rp_V_2_1, i10* %line_delays_2_rp_V_1

ST_3: stg_62 [1/1] 1.57ns
line_buffer.exit.preheader:7  store i10 %line_delays_rp_V_1_1, i10* %line_delays_1_rp_V_1

ST_3: stg_63 [1/1] 1.57ns
line_buffer.exit.preheader:8  store i10 %line_delays_rp_V_0_1, i10* %line_delays_0_rp_V_1

ST_3: stg_64 [1/1] 1.57ns
line_buffer.exit.preheader:9  store i10 %line_delays_wp_V_2_load, i10* %line_delays_2_wp_V_1

ST_3: stg_65 [1/1] 1.57ns
line_buffer.exit.preheader:10  store i10 %line_delays_wp_V_1_load, i10* %line_delays_1_wp_V_1

ST_3: stg_66 [1/1] 1.57ns
line_buffer.exit.preheader:11  store i10 %line_delays_wp_V_load, i10* %line_delays_0_wp_V_1

ST_3: stg_67 [1/1] 1.57ns
line_buffer.exit.preheader:12  br label %line_buffer.exit


 <State 4>: 3.51ns
ST_4: p_s [1/1] 0.00ns
line_buffer.exit:0  %p_s = phi i4 [ 0, %line_buffer.exit.preheader ], [ %i_V, %.preheader ]

ST_4: exitcond1 [1/1] 1.94ns
line_buffer.exit:1  %exitcond1 = icmp eq i4 %p_s, -7

ST_4: empty_4 [1/1] 0.00ns
line_buffer.exit:2  %empty_4 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 9, i64 9, i64 9)

ST_4: i_V [1/1] 0.85ns
line_buffer.exit:3  %i_V = add i4 %p_s, 1

ST_4: stg_72 [1/1] 1.57ns
line_buffer.exit:4  br i1 %exitcond1, label %2, label %.preheader

ST_4: stg_73 [1/1] 0.00ns
:0  ret void


 <State 5>: 1.94ns
ST_5: p_1 [1/1] 0.00ns
.preheader:0  %p_1 = phi i4 [ %j_V, %1 ], [ 0, %line_buffer.exit ]

ST_5: exitcond [1/1] 1.94ns
.preheader:1  %exitcond = icmp eq i4 %p_1, -8

ST_5: empty_5 [1/1] 0.00ns
.preheader:2  %empty_5 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)

ST_5: j_V [1/1] 0.85ns
.preheader:3  %j_V = add i4 %p_1, 1

ST_5: stg_78 [1/1] 0.00ns
.preheader:4  br i1 %exitcond, label %line_buffer.exit, label %1


 <State 6>: 0.00ns
ST_6: line_delays_0_wp_V_1_load [1/1] 0.00ns
:0  %line_delays_0_wp_V_1_load = load i10* %line_delays_0_wp_V_1

ST_6: line_delays_1_wp_V_1_load [1/1] 0.00ns
:1  %line_delays_1_wp_V_1_load = load i10* %line_delays_1_wp_V_1

ST_6: line_delays_2_wp_V_1_load [1/1] 0.00ns
:2  %line_delays_2_wp_V_1_load = load i10* %line_delays_2_wp_V_1

ST_6: line_delays_0_rp_V_1_load [1/1] 0.00ns
:3  %line_delays_0_rp_V_1_load = load i10* %line_delays_0_rp_V_1

ST_6: line_delays_1_rp_V_1_load [1/1] 0.00ns
:4  %line_delays_1_rp_V_1_load = load i10* %line_delays_1_rp_V_1

ST_6: line_delays_2_rp_V_1_load [1/1] 0.00ns
:5  %line_delays_2_rp_V_1_load = load i10* %line_delays_2_rp_V_1

ST_6: call_ret1 [7/7] 0.00ns
:6  %call_ret1 = call fastcc { i10, i10, i10, i10, i10, i10, i24 } @dog_func(i10 %line_delays_0_wp_V_1_load, i10 %line_delays_1_wp_V_1_load, i10 %line_delays_2_wp_V_1_load, i10 %line_delays_0_rp_V_1_load, i10 %line_delays_1_rp_V_1_load, i10 %line_delays_2_rp_V_1_load, [3072 x i8]* %line_delays_buffer_V, [3 x i8]* %line_delay_outs_V, i8 %in_V_read)


 <State 7>: 5.10ns
ST_7: call_ret1 [6/7] 5.10ns
:6  %call_ret1 = call fastcc { i10, i10, i10, i10, i10, i10, i24 } @dog_func(i10 %line_delays_0_wp_V_1_load, i10 %line_delays_1_wp_V_1_load, i10 %line_delays_2_wp_V_1_load, i10 %line_delays_0_rp_V_1_load, i10 %line_delays_1_rp_V_1_load, i10 %line_delays_2_rp_V_1_load, [3072 x i8]* %line_delays_buffer_V, [3 x i8]* %line_delay_outs_V, i8 %in_V_read)


 <State 8>: 5.10ns
ST_8: call_ret1 [5/7] 5.10ns
:6  %call_ret1 = call fastcc { i10, i10, i10, i10, i10, i10, i24 } @dog_func(i10 %line_delays_0_wp_V_1_load, i10 %line_delays_1_wp_V_1_load, i10 %line_delays_2_wp_V_1_load, i10 %line_delays_0_rp_V_1_load, i10 %line_delays_1_rp_V_1_load, i10 %line_delays_2_rp_V_1_load, [3072 x i8]* %line_delays_buffer_V, [3 x i8]* %line_delay_outs_V, i8 %in_V_read)


 <State 9>: 5.10ns
ST_9: call_ret1 [4/7] 5.10ns
:6  %call_ret1 = call fastcc { i10, i10, i10, i10, i10, i10, i24 } @dog_func(i10 %line_delays_0_wp_V_1_load, i10 %line_delays_1_wp_V_1_load, i10 %line_delays_2_wp_V_1_load, i10 %line_delays_0_rp_V_1_load, i10 %line_delays_1_rp_V_1_load, i10 %line_delays_2_rp_V_1_load, [3072 x i8]* %line_delays_buffer_V, [3 x i8]* %line_delay_outs_V, i8 %in_V_read)


 <State 10>: 5.10ns
ST_10: call_ret1 [3/7] 5.10ns
:6  %call_ret1 = call fastcc { i10, i10, i10, i10, i10, i10, i24 } @dog_func(i10 %line_delays_0_wp_V_1_load, i10 %line_delays_1_wp_V_1_load, i10 %line_delays_2_wp_V_1_load, i10 %line_delays_0_rp_V_1_load, i10 %line_delays_1_rp_V_1_load, i10 %line_delays_2_rp_V_1_load, [3072 x i8]* %line_delays_buffer_V, [3 x i8]* %line_delay_outs_V, i8 %in_V_read)


 <State 11>: 5.10ns
ST_11: call_ret1 [2/7] 5.10ns
:6  %call_ret1 = call fastcc { i10, i10, i10, i10, i10, i10, i24 } @dog_func(i10 %line_delays_0_wp_V_1_load, i10 %line_delays_1_wp_V_1_load, i10 %line_delays_2_wp_V_1_load, i10 %line_delays_0_rp_V_1_load, i10 %line_delays_1_rp_V_1_load, i10 %line_delays_2_rp_V_1_load, [3072 x i8]* %line_delays_buffer_V, [3 x i8]* %line_delay_outs_V, i8 %in_V_read)


 <State 12>: 4.28ns
ST_12: call_ret1 [1/7] 2.71ns
:6  %call_ret1 = call fastcc { i10, i10, i10, i10, i10, i10, i24 } @dog_func(i10 %line_delays_0_wp_V_1_load, i10 %line_delays_1_wp_V_1_load, i10 %line_delays_2_wp_V_1_load, i10 %line_delays_0_rp_V_1_load, i10 %line_delays_1_rp_V_1_load, i10 %line_delays_2_rp_V_1_load, [3072 x i8]* %line_delays_buffer_V, [3 x i8]* %line_delay_outs_V, i8 %in_V_read)

ST_12: line_delays_2_rp_V [1/1] 0.00ns
:7  %line_delays_2_rp_V = extractvalue { i10, i10, i10, i10, i10, i10, i24 } %call_ret1, 5

ST_12: line_delays_1_rp_V [1/1] 0.00ns
:8  %line_delays_1_rp_V = extractvalue { i10, i10, i10, i10, i10, i10, i24 } %call_ret1, 4

ST_12: line_delays_0_rp_V [1/1] 0.00ns
:9  %line_delays_0_rp_V = extractvalue { i10, i10, i10, i10, i10, i10, i24 } %call_ret1, 3

ST_12: line_delays_2_wp_V [1/1] 0.00ns
:10  %line_delays_2_wp_V = extractvalue { i10, i10, i10, i10, i10, i10, i24 } %call_ret1, 2

ST_12: line_delays_1_wp_V [1/1] 0.00ns
:11  %line_delays_1_wp_V = extractvalue { i10, i10, i10, i10, i10, i10, i24 } %call_ret1, 1

ST_12: line_delays_0_wp_V [1/1] 0.00ns
:12  %line_delays_0_wp_V = extractvalue { i10, i10, i10, i10, i10, i10, i24 } %call_ret1, 0

ST_12: out_data_V_ret [1/1] 0.00ns
:13  %out_data_V_ret = extractvalue { i10, i10, i10, i10, i10, i10, i24 } %call_ret1, 6

ST_12: stg_99 [1/1] 0.00ns
:14  call void @_ssdm_op_Write.ap_auto.i24P(i24* %out_data_V, i24 %out_data_V_ret)

ST_12: stg_100 [1/1] 1.57ns
:15  store i10 %line_delays_2_rp_V, i10* %line_delays_2_rp_V_1

ST_12: stg_101 [1/1] 1.57ns
:16  store i10 %line_delays_1_rp_V, i10* %line_delays_1_rp_V_1

ST_12: stg_102 [1/1] 1.57ns
:17  store i10 %line_delays_0_rp_V, i10* %line_delays_0_rp_V_1

ST_12: stg_103 [1/1] 1.57ns
:18  store i10 %line_delays_2_wp_V, i10* %line_delays_2_wp_V_1

ST_12: stg_104 [1/1] 1.57ns
:19  store i10 %line_delays_1_wp_V, i10* %line_delays_1_wp_V_1

ST_12: stg_105 [1/1] 1.57ns
:20  store i10 %line_delays_0_wp_V, i10* %line_delays_0_wp_V_1

ST_12: stg_106 [1/1] 0.00ns
:21  br label %.preheader



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 8ns, clock uncertainty: 1ns.

 No timing violations. 


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
