// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dog_func_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_V_ap_vld,
        ap_ce,
        delay_wp_V_read,
        delay_rp_V_read,
        delay_buffer_V_address0,
        delay_buffer_V_ce0,
        delay_buffer_V_q0,
        delay_buffer_V_address1,
        delay_buffer_V_ce1,
        delay_buffer_V_we1,
        delay_buffer_V_d1,
        tmp_5,
        in_V,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        in_V_blk_n
);

parameter    ap_ST_pp0_stg0_fsm_0 = 1'b1;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv10_1 = 10'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   in_V_ap_vld;
input   ap_ce;
input  [9:0] delay_wp_V_read;
input  [9:0] delay_rp_V_read;
output  [11:0] delay_buffer_V_address0;
output   delay_buffer_V_ce0;
input  [7:0] delay_buffer_V_q0;
output  [11:0] delay_buffer_V_address1;
output   delay_buffer_V_ce1;
output   delay_buffer_V_we1;
output  [7:0] delay_buffer_V_d1;
input  [2:0] tmp_5;
input  [7:0] in_V;
output  [7:0] ap_return_0;
output  [9:0] ap_return_1;
output  [9:0] ap_return_2;
output   in_V_blk_n;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg delay_buffer_V_ce0;
reg delay_buffer_V_ce1;
reg delay_buffer_V_we1;
reg in_V_blk_n;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_0;
reg    ap_sig_18;
wire    ap_reg_ppiten_pp0_it0;
reg    ap_reg_ppiten_pp0_it1;
reg    ap_sig_37;
reg   [9:0] delay_rp_V_read_1_reg_146;
reg   [9:0] delay_wp_V_read_1_reg_151;
wire   [63:0] tmp_3_fu_100_p1;
wire   [63:0] tmp_6_fu_113_p1;
wire   [12:0] tmp_2_fu_92_p3;
wire   [12:0] tmp_4_fu_105_p3;
wire   [9:0] delay_wp_V_write_assign_fu_118_p2;
wire   [9:0] delay_rp_V_write_assign_fu_123_p2;
reg   [0:0] ap_NS_fsm;
reg    ap_sig_pprstidle_pp0;
reg    ap_sig_pprststart_0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'b1;
#0 ap_reg_ppiten_pp0_it1 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_pp0_stg0_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & ~(((1'b1 == ap_reg_ppiten_pp0_it0) & ap_sig_37) | ~(1'b1 == ap_ce)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & ap_sig_37) & (1'b1 == ap_ce))) begin
        delay_rp_V_read_1_reg_146 <= delay_rp_V_read;
        delay_wp_V_read_1_reg_151 <= delay_wp_V_read;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == ap_reg_ppiten_pp0_it0)) | ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == ap_reg_ppiten_pp0_it1) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & ap_sig_37) & (1'b1 == ap_ce)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b0 == ap_reg_ppiten_pp0_it0) & (1'b0 == ap_reg_ppiten_pp0_it1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & ap_sig_37) & (1'b1 == ap_ce))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_18) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b0 == ap_reg_ppiten_pp0_it0))) begin
        ap_sig_pprstidle_pp0 = 1'b1;
    end else begin
        ap_sig_pprstidle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_reg_ppiten_pp0_it0) & (1'b1 == ap_start))) begin
        ap_sig_pprststart_0 = 1'b1;
    end else begin
        ap_sig_pprststart_0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & ap_sig_37) & (1'b1 == ap_ce))) begin
        delay_buffer_V_ce0 = 1'b1;
    end else begin
        delay_buffer_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & ap_sig_37) & (1'b1 == ap_ce))) begin
        delay_buffer_V_ce1 = 1'b1;
    end else begin
        delay_buffer_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & ap_sig_37) & (1'b1 == ap_ce))) begin
        delay_buffer_V_we1 = 1'b1;
    end else begin
        delay_buffer_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~(ap_start == 1'b0))) begin
        in_V_blk_n = in_V_ap_vld;
    end else begin
        in_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_pp0_stg0_fsm_0 : begin
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_reg_ppiten_pp0_it0 = ap_start;

assign ap_return_0 = delay_buffer_V_q0;

assign ap_return_1 = delay_wp_V_write_assign_fu_118_p2;

assign ap_return_2 = delay_rp_V_write_assign_fu_123_p2;

always @ (*) begin
    ap_sig_18 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_37 = ((in_V_ap_vld == 1'b0) | (ap_start == 1'b0));
end

assign delay_buffer_V_address0 = tmp_6_fu_113_p1;

assign delay_buffer_V_address1 = tmp_3_fu_100_p1;

assign delay_buffer_V_d1 = in_V;

assign delay_rp_V_write_assign_fu_123_p2 = (delay_rp_V_read_1_reg_146 + ap_const_lv10_1);

assign delay_wp_V_write_assign_fu_118_p2 = (delay_wp_V_read_1_reg_151 + ap_const_lv10_1);

assign tmp_2_fu_92_p3 = {{tmp_5}, {delay_wp_V_read}};

assign tmp_3_fu_100_p1 = tmp_2_fu_92_p3;

assign tmp_4_fu_105_p3 = {{tmp_5}, {delay_rp_V_read}};

assign tmp_6_fu_113_p1 = tmp_4_fu_105_p3;

endmodule //dog_func_1
