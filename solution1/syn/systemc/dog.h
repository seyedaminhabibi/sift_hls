// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dog_HH_
#define _dog_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "dog_buffer_0_V.h"
#include "dog_buffer_13_V.h"

namespace ap_rtl {

struct dog : public sc_module {
    // Port declarations 12
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<24> > in_V_V_TDATA;
    sc_in< sc_logic > in_V_V_TVALID;
    sc_out< sc_logic > in_V_V_TREADY;
    sc_in< sc_lv<256> > out_V_data_V_TDATA;
    sc_in< sc_logic > out_V_data_V_TVALID;
    sc_out< sc_logic > out_V_data_V_TREADY;


    // Module declarations
    dog(sc_module_name name);
    SC_HAS_PROCESS(dog);

    ~dog();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    dog_buffer_0_V* buffer_0_V_U;
    dog_buffer_0_V* buffer_1_V_U;
    dog_buffer_0_V* buffer_2_V_U;
    dog_buffer_0_V* buffer_3_V_U;
    dog_buffer_0_V* buffer_4_V_U;
    dog_buffer_0_V* buffer_5_V_U;
    dog_buffer_0_V* buffer_6_V_U;
    dog_buffer_0_V* buffer_7_V_U;
    dog_buffer_0_V* buffer_8_V_U;
    dog_buffer_0_V* buffer_9_V_U;
    dog_buffer_0_V* buffer_10_V_U;
    dog_buffer_0_V* buffer_11_V_U;
    dog_buffer_0_V* buffer_12_V_U;
    dog_buffer_13_V* buffer_13_V_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_23;
    sc_signal< sc_logic > in_V_V_TDATA_blk_n;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_42;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_619;
    sc_signal< sc_lv<1> > tmp_mid2_reg_675;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_450_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_58;
    sc_signal< sc_lv<19> > indvar_flatten_next_fu_456_p2;
    sc_signal< sc_lv<19> > indvar_flatten_next_reg_623;
    sc_signal< sc_lv<1> > exitcond_fu_462_p2;
    sc_signal< sc_lv<1> > exitcond_reg_628;
    sc_signal< sc_lv<10> > p_0178_1_mid2_fu_474_p3;
    sc_signal< sc_lv<10> > p_0178_1_mid2_reg_633;
    sc_signal< sc_lv<10> > p_0279_1_mid2_fu_488_p3;
    sc_signal< sc_lv<10> > p_0279_1_mid2_reg_639;
    sc_signal< sc_lv<1> > tmp_mid1_fu_502_p2;
    sc_signal< sc_lv<1> > tmp_mid1_reg_645;
    sc_signal< sc_lv<1> > tmp_fu_508_p2;
    sc_signal< sc_lv<1> > tmp_reg_650;
    sc_signal< sc_lv<10> > indvars_iv_mid2_fu_520_p3;
    sc_signal< sc_lv<10> > indvars_iv_mid2_reg_655;
    sc_signal< sc_lv<10> > p_mid2_fu_528_p3;
    sc_signal< sc_lv<10> > p_mid2_reg_660;
    sc_signal< sc_lv<10> > p_1_mid2_fu_536_p3;
    sc_signal< sc_lv<10> > p_1_mid2_reg_665;
    sc_signal< sc_lv<9> > p_2_mid2_fu_544_p3;
    sc_signal< sc_lv<9> > p_2_mid2_reg_670;
    sc_signal< sc_lv<1> > tmp_mid2_fu_552_p3;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_88;
    sc_signal< sc_lv<10> > tmp_8_fu_573_p2;
    sc_signal< sc_lv<10> > tmp_8_reg_744;
    sc_signal< sc_lv<17> > buffer_0_V_q0;
    sc_signal< sc_lv<17> > buffer_0_V_load_reg_749;
    sc_signal< bool > ap_sig_122;
    sc_signal< sc_lv<17> > buffer_1_V_q0;
    sc_signal< sc_lv<17> > buffer_1_V_load_reg_754;
    sc_signal< sc_lv<17> > buffer_2_V_q0;
    sc_signal< sc_lv<17> > buffer_2_V_load_reg_759;
    sc_signal< sc_lv<17> > buffer_3_V_q0;
    sc_signal< sc_lv<17> > buffer_3_V_load_reg_764;
    sc_signal< sc_lv<17> > buffer_4_V_q0;
    sc_signal< sc_lv<17> > buffer_4_V_load_reg_769;
    sc_signal< sc_lv<17> > buffer_5_V_q0;
    sc_signal< sc_lv<17> > buffer_5_V_load_reg_774;
    sc_signal< sc_lv<17> > buffer_6_V_q0;
    sc_signal< sc_lv<17> > buffer_6_V_load_reg_779;
    sc_signal< sc_lv<17> > buffer_7_V_q0;
    sc_signal< sc_lv<17> > p_Val2_s_reg_784;
    sc_signal< sc_lv<17> > buffer_8_V_q0;
    sc_signal< sc_lv<17> > buffer_8_V_load_reg_789;
    sc_signal< sc_lv<17> > buffer_9_V_q0;
    sc_signal< sc_lv<17> > buffer_9_V_load_reg_794;
    sc_signal< sc_lv<17> > buffer_10_V_q0;
    sc_signal< sc_lv<17> > buffer_10_V_load_reg_799;
    sc_signal< sc_lv<17> > buffer_11_V_q0;
    sc_signal< sc_lv<17> > buffer_11_V_load_reg_804;
    sc_signal< sc_lv<17> > buffer_12_V_q0;
    sc_signal< sc_lv<17> > buffer_12_V_load_reg_809;
    sc_signal< sc_lv<10> > tmp_7_fu_608_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st5_fsm_4;
    sc_signal< bool > ap_sig_157;
    sc_signal< sc_lv<10> > buffer_0_V_address0;
    sc_signal< sc_logic > buffer_0_V_ce0;
    sc_signal< sc_logic > buffer_0_V_we0;
    sc_signal< sc_lv<10> > buffer_1_V_address0;
    sc_signal< sc_logic > buffer_1_V_ce0;
    sc_signal< sc_logic > buffer_1_V_we0;
    sc_signal< sc_lv<10> > buffer_2_V_address0;
    sc_signal< sc_logic > buffer_2_V_ce0;
    sc_signal< sc_logic > buffer_2_V_we0;
    sc_signal< sc_lv<10> > buffer_3_V_address0;
    sc_signal< sc_logic > buffer_3_V_ce0;
    sc_signal< sc_logic > buffer_3_V_we0;
    sc_signal< sc_lv<10> > buffer_4_V_address0;
    sc_signal< sc_logic > buffer_4_V_ce0;
    sc_signal< sc_logic > buffer_4_V_we0;
    sc_signal< sc_lv<10> > buffer_5_V_address0;
    sc_signal< sc_logic > buffer_5_V_ce0;
    sc_signal< sc_logic > buffer_5_V_we0;
    sc_signal< sc_lv<10> > buffer_6_V_address0;
    sc_signal< sc_logic > buffer_6_V_ce0;
    sc_signal< sc_logic > buffer_6_V_we0;
    sc_signal< sc_lv<10> > buffer_7_V_address0;
    sc_signal< sc_logic > buffer_7_V_ce0;
    sc_signal< sc_logic > buffer_7_V_we0;
    sc_signal< sc_lv<10> > buffer_8_V_address0;
    sc_signal< sc_logic > buffer_8_V_ce0;
    sc_signal< sc_logic > buffer_8_V_we0;
    sc_signal< sc_lv<10> > buffer_9_V_address0;
    sc_signal< sc_logic > buffer_9_V_ce0;
    sc_signal< sc_logic > buffer_9_V_we0;
    sc_signal< sc_lv<10> > buffer_10_V_address0;
    sc_signal< sc_logic > buffer_10_V_ce0;
    sc_signal< sc_logic > buffer_10_V_we0;
    sc_signal< sc_lv<10> > buffer_11_V_address0;
    sc_signal< sc_logic > buffer_11_V_ce0;
    sc_signal< sc_logic > buffer_11_V_we0;
    sc_signal< sc_lv<10> > buffer_12_V_address0;
    sc_signal< sc_logic > buffer_12_V_ce0;
    sc_signal< sc_logic > buffer_12_V_we0;
    sc_signal< sc_lv<10> > buffer_13_V_address0;
    sc_signal< sc_logic > buffer_13_V_ce0;
    sc_signal< sc_logic > buffer_13_V_we0;
    sc_signal< sc_lv<19> > indvar_flatten_reg_373;
    sc_signal< sc_lv<10> > indvars_iv_reg_384;
    sc_signal< sc_lv<10> > p_s_reg_395;
    sc_signal< sc_lv<10> > p_1_reg_406;
    sc_signal< sc_lv<9> > p_2_reg_417;
    sc_signal< sc_lv<10> > p_0178_1_reg_428;
    sc_signal< sc_lv<10> > p_0279_1_reg_439;
    sc_signal< sc_lv<64> > tmp_5_fu_557_p1;
    sc_signal< sc_lv<64> > tmp_4_fu_591_p1;
    sc_signal< sc_lv<17> > tmp_V_fu_62;
    sc_signal< sc_lv<17> > tmp_V_1_fu_578_p1;
    sc_signal< sc_lv<10> > wp_V_fu_468_p2;
    sc_signal< sc_lv<10> > rp_V_fu_482_p2;
    sc_signal< sc_lv<9> > i_V_fu_496_p2;
    sc_signal< sc_lv<10> > indvars_iv_next_dup2_fu_514_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st6_fsm_5;
    sc_signal< bool > ap_sig_402;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_st1_fsm_0;
    static const sc_lv<6> ap_ST_st2_fsm_1;
    static const sc_lv<6> ap_ST_st3_fsm_2;
    static const sc_lv<6> ap_ST_st4_fsm_3;
    static const sc_lv<6> ap_ST_st5_fsm_4;
    static const sc_lv<6> ap_ST_st6_fsm_5;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<19> ap_const_lv19_0;
    static const sc_lv<10> ap_const_lv10_280;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<10> ap_const_lv10_180;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<19> ap_const_lv19_4C180;
    static const sc_lv<19> ap_const_lv19_1;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<9> ap_const_lv9_1E0;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<32> ap_const_lv32_5;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sig_122();
    void thread_ap_sig_157();
    void thread_ap_sig_23();
    void thread_ap_sig_402();
    void thread_ap_sig_42();
    void thread_ap_sig_58();
    void thread_ap_sig_88();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_ap_sig_cseq_ST_st5_fsm_4();
    void thread_ap_sig_cseq_ST_st6_fsm_5();
    void thread_buffer_0_V_address0();
    void thread_buffer_0_V_ce0();
    void thread_buffer_0_V_we0();
    void thread_buffer_10_V_address0();
    void thread_buffer_10_V_ce0();
    void thread_buffer_10_V_we0();
    void thread_buffer_11_V_address0();
    void thread_buffer_11_V_ce0();
    void thread_buffer_11_V_we0();
    void thread_buffer_12_V_address0();
    void thread_buffer_12_V_ce0();
    void thread_buffer_12_V_we0();
    void thread_buffer_13_V_address0();
    void thread_buffer_13_V_ce0();
    void thread_buffer_13_V_we0();
    void thread_buffer_1_V_address0();
    void thread_buffer_1_V_ce0();
    void thread_buffer_1_V_we0();
    void thread_buffer_2_V_address0();
    void thread_buffer_2_V_ce0();
    void thread_buffer_2_V_we0();
    void thread_buffer_3_V_address0();
    void thread_buffer_3_V_ce0();
    void thread_buffer_3_V_we0();
    void thread_buffer_4_V_address0();
    void thread_buffer_4_V_ce0();
    void thread_buffer_4_V_we0();
    void thread_buffer_5_V_address0();
    void thread_buffer_5_V_ce0();
    void thread_buffer_5_V_we0();
    void thread_buffer_6_V_address0();
    void thread_buffer_6_V_ce0();
    void thread_buffer_6_V_we0();
    void thread_buffer_7_V_address0();
    void thread_buffer_7_V_ce0();
    void thread_buffer_7_V_we0();
    void thread_buffer_8_V_address0();
    void thread_buffer_8_V_ce0();
    void thread_buffer_8_V_we0();
    void thread_buffer_9_V_address0();
    void thread_buffer_9_V_ce0();
    void thread_buffer_9_V_we0();
    void thread_exitcond_flatten_fu_450_p2();
    void thread_exitcond_fu_462_p2();
    void thread_i_V_fu_496_p2();
    void thread_in_V_V_TDATA_blk_n();
    void thread_in_V_V_TREADY();
    void thread_indvar_flatten_next_fu_456_p2();
    void thread_indvars_iv_mid2_fu_520_p3();
    void thread_indvars_iv_next_dup2_fu_514_p2();
    void thread_out_V_data_V_TREADY();
    void thread_p_0178_1_mid2_fu_474_p3();
    void thread_p_0279_1_mid2_fu_488_p3();
    void thread_p_1_mid2_fu_536_p3();
    void thread_p_2_mid2_fu_544_p3();
    void thread_p_mid2_fu_528_p3();
    void thread_rp_V_fu_482_p2();
    void thread_tmp_4_fu_591_p1();
    void thread_tmp_5_fu_557_p1();
    void thread_tmp_7_fu_608_p2();
    void thread_tmp_8_fu_573_p2();
    void thread_tmp_V_1_fu_578_p1();
    void thread_tmp_fu_508_p2();
    void thread_tmp_mid1_fu_502_p2();
    void thread_tmp_mid2_fu_552_p3();
    void thread_wp_V_fu_468_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
