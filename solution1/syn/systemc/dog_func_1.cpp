// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "dog_func_1.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic dog_func_1::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic dog_func_1::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> dog_func_1::ap_ST_pp0_stg0_fsm_0 = "1";
const sc_lv<32> dog_func_1::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> dog_func_1::ap_const_lv1_1 = "1";
const sc_lv<10> dog_func_1::ap_const_lv10_1 = "1";

dog_func_1::dog_func_1(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_37 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_37 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_ap_reg_ppiten_pp0_it0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_return_0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_37 );
    sensitive << ( ap_ce );
    sensitive << ( delay_buffer_V_q0 );

    SC_METHOD(thread_ap_return_1);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_37 );
    sensitive << ( ap_ce );
    sensitive << ( delay_wp_V_write_assign_fu_118_p2 );

    SC_METHOD(thread_ap_return_2);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_37 );
    sensitive << ( ap_ce );
    sensitive << ( delay_rp_V_write_assign_fu_123_p2 );

    SC_METHOD(thread_ap_sig_18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_37);
    sensitive << ( ap_start );
    sensitive << ( in_V_ap_vld );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg0_fsm_0);
    sensitive << ( ap_sig_18 );

    SC_METHOD(thread_ap_sig_pprstidle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_reg_ppiten_pp0_it0 );

    SC_METHOD(thread_ap_sig_pprststart_0);
    sensitive << ( ap_start );
    sensitive << ( ap_reg_ppiten_pp0_it0 );

    SC_METHOD(thread_delay_buffer_V_address0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( tmp_6_fu_113_p1 );

    SC_METHOD(thread_delay_buffer_V_address1);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( tmp_3_fu_100_p1 );

    SC_METHOD(thread_delay_buffer_V_ce0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_37 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_delay_buffer_V_ce1);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_37 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_delay_buffer_V_d1);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( in_V );

    SC_METHOD(thread_delay_buffer_V_we1);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_37 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_delay_rp_V_write_assign_fu_123_p2);
    sensitive << ( delay_rp_V_read_1_reg_146 );

    SC_METHOD(thread_delay_wp_V_write_assign_fu_118_p2);
    sensitive << ( delay_wp_V_read_1_reg_151 );

    SC_METHOD(thread_in_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( in_V_ap_vld );

    SC_METHOD(thread_tmp_2_fu_92_p3);
    sensitive << ( delay_wp_V_read );
    sensitive << ( tmp_5 );

    SC_METHOD(thread_tmp_3_fu_100_p1);
    sensitive << ( tmp_2_fu_92_p3 );

    SC_METHOD(thread_tmp_4_fu_105_p3);
    sensitive << ( delay_rp_V_read );
    sensitive << ( tmp_5 );

    SC_METHOD(thread_tmp_6_fu_113_p1);
    sensitive << ( tmp_4_fu_105_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_37 );
    sensitive << ( ap_ce );
    sensitive << ( ap_sig_pprstidle_pp0 );
    sensitive << ( ap_sig_pprststart_0 );

    ap_CS_fsm = "1";
    ap_reg_ppiten_pp0_it1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "dog_func_1_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_V_ap_vld, "(port)in_V_ap_vld");
    sc_trace(mVcdFile, ap_ce, "(port)ap_ce");
    sc_trace(mVcdFile, delay_wp_V_read, "(port)delay_wp_V_read");
    sc_trace(mVcdFile, delay_rp_V_read, "(port)delay_rp_V_read");
    sc_trace(mVcdFile, delay_buffer_V_address0, "(port)delay_buffer_V_address0");
    sc_trace(mVcdFile, delay_buffer_V_ce0, "(port)delay_buffer_V_ce0");
    sc_trace(mVcdFile, delay_buffer_V_q0, "(port)delay_buffer_V_q0");
    sc_trace(mVcdFile, delay_buffer_V_address1, "(port)delay_buffer_V_address1");
    sc_trace(mVcdFile, delay_buffer_V_ce1, "(port)delay_buffer_V_ce1");
    sc_trace(mVcdFile, delay_buffer_V_we1, "(port)delay_buffer_V_we1");
    sc_trace(mVcdFile, delay_buffer_V_d1, "(port)delay_buffer_V_d1");
    sc_trace(mVcdFile, tmp_5, "(port)tmp_5");
    sc_trace(mVcdFile, in_V, "(port)in_V");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
    sc_trace(mVcdFile, ap_return_2, "(port)ap_return_2");
    sc_trace(mVcdFile, in_V_blk_n, "(port)in_V_blk_n");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg0_fsm_0, "ap_sig_cseq_ST_pp0_stg0_fsm_0");
    sc_trace(mVcdFile, ap_sig_18, "ap_sig_18");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it0, "ap_reg_ppiten_pp0_it0");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it1, "ap_reg_ppiten_pp0_it1");
    sc_trace(mVcdFile, ap_sig_37, "ap_sig_37");
    sc_trace(mVcdFile, delay_rp_V_read_1_reg_146, "delay_rp_V_read_1_reg_146");
    sc_trace(mVcdFile, delay_wp_V_read_1_reg_151, "delay_wp_V_read_1_reg_151");
    sc_trace(mVcdFile, tmp_3_fu_100_p1, "tmp_3_fu_100_p1");
    sc_trace(mVcdFile, tmp_6_fu_113_p1, "tmp_6_fu_113_p1");
    sc_trace(mVcdFile, tmp_2_fu_92_p3, "tmp_2_fu_92_p3");
    sc_trace(mVcdFile, tmp_4_fu_105_p3, "tmp_4_fu_105_p3");
    sc_trace(mVcdFile, delay_wp_V_write_assign_fu_118_p2, "delay_wp_V_write_assign_fu_118_p2");
    sc_trace(mVcdFile, delay_rp_V_write_assign_fu_123_p2, "delay_rp_V_write_assign_fu_123_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_sig_pprstidle_pp0, "ap_sig_pprstidle_pp0");
    sc_trace(mVcdFile, ap_sig_pprststart_0, "ap_sig_pprststart_0");
#endif

    }
}

dog_func_1::~dog_func_1() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void dog_func_1::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_pp0_stg0_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_0.read()) && 
             !((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  ap_sig_37.read()) || !esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read())))) {
            ap_reg_ppiten_pp0_it1 = ap_start.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_37.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read()))) {
        delay_rp_V_read_1_reg_146 = delay_rp_V_read.read();
        delay_wp_V_read_1_reg_151 = delay_wp_V_read.read();
    }
}

void dog_func_1::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_37.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void dog_func_1::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void dog_func_1::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_37.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void dog_func_1::thread_ap_reg_ppiten_pp0_it0() {
    ap_reg_ppiten_pp0_it0 = ap_start.read();
}

void dog_func_1::thread_ap_return_0() {
    ap_return_0 = delay_buffer_V_q0.read();
}

void dog_func_1::thread_ap_return_1() {
    ap_return_1 = delay_wp_V_write_assign_fu_118_p2.read();
}

void dog_func_1::thread_ap_return_2() {
    ap_return_2 = delay_rp_V_write_assign_fu_123_p2.read();
}

void dog_func_1::thread_ap_sig_18() {
    ap_sig_18 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void dog_func_1::thread_ap_sig_37() {
    ap_sig_37 = (esl_seteq<1,1,1>(in_V_ap_vld.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0));
}

void dog_func_1::thread_ap_sig_cseq_ST_pp0_stg0_fsm_0() {
    if (ap_sig_18.read()) {
        ap_sig_cseq_ST_pp0_stg0_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg0_fsm_0 = ap_const_logic_0;
    }
}

void dog_func_1::thread_ap_sig_pprstidle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it0.read()))) {
        ap_sig_pprstidle_pp0 = ap_const_logic_1;
    } else {
        ap_sig_pprstidle_pp0 = ap_const_logic_0;
    }
}

void dog_func_1::thread_ap_sig_pprststart_0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()))) {
        ap_sig_pprststart_0 = ap_const_logic_1;
    } else {
        ap_sig_pprststart_0 = ap_const_logic_0;
    }
}

void dog_func_1::thread_delay_buffer_V_address0() {
    delay_buffer_V_address0 =  (sc_lv<12>) (tmp_6_fu_113_p1.read());
}

void dog_func_1::thread_delay_buffer_V_address1() {
    delay_buffer_V_address1 =  (sc_lv<12>) (tmp_3_fu_100_p1.read());
}

void dog_func_1::thread_delay_buffer_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_37.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read()))) {
        delay_buffer_V_ce0 = ap_const_logic_1;
    } else {
        delay_buffer_V_ce0 = ap_const_logic_0;
    }
}

void dog_func_1::thread_delay_buffer_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_37.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read()))) {
        delay_buffer_V_ce1 = ap_const_logic_1;
    } else {
        delay_buffer_V_ce1 = ap_const_logic_0;
    }
}

void dog_func_1::thread_delay_buffer_V_d1() {
    delay_buffer_V_d1 = in_V.read();
}

void dog_func_1::thread_delay_buffer_V_we1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_37.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read())))) {
        delay_buffer_V_we1 = ap_const_logic_1;
    } else {
        delay_buffer_V_we1 = ap_const_logic_0;
    }
}

void dog_func_1::thread_delay_rp_V_write_assign_fu_123_p2() {
    delay_rp_V_write_assign_fu_123_p2 = (!delay_rp_V_read_1_reg_146.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(delay_rp_V_read_1_reg_146.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void dog_func_1::thread_delay_wp_V_write_assign_fu_118_p2() {
    delay_wp_V_write_assign_fu_118_p2 = (!delay_wp_V_read_1_reg_151.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(delay_wp_V_read_1_reg_151.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void dog_func_1::thread_in_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        in_V_blk_n = in_V_ap_vld.read();
    } else {
        in_V_blk_n = ap_const_logic_1;
    }
}

void dog_func_1::thread_tmp_2_fu_92_p3() {
    tmp_2_fu_92_p3 = esl_concat<3,10>(tmp_5.read(), delay_wp_V_read.read());
}

void dog_func_1::thread_tmp_3_fu_100_p1() {
    tmp_3_fu_100_p1 = esl_zext<64,13>(tmp_2_fu_92_p3.read());
}

void dog_func_1::thread_tmp_4_fu_105_p3() {
    tmp_4_fu_105_p3 = esl_concat<3,10>(tmp_5.read(), delay_rp_V_read.read());
}

void dog_func_1::thread_tmp_6_fu_113_p1() {
    tmp_6_fu_113_p1 = esl_zext<64,13>(tmp_4_fu_105_p3.read());
}

void dog_func_1::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_0;
break;
        default : 
            ap_NS_fsm = "X";
            break;
    }
}

}

